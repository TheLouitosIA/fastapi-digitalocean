name: Déploiement sur Serveur Personnel

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: [self-hosted]
    steps:
      - name: Cloner le dépôt
        uses: actions/checkout@v2

      - name: Setup Python environment on Windows
        if: ${{ runner.os == 'Windows' }}
        run: |
          python -m venv venv
          .\venv\Scripts\Activate
          
      - name: Setup Python environment on Unix
        if: ${{ runner.os != 'Windows' }}
        run: |
          python -m venv venv
          source venv/bin/activate
          
      - name: Installer les dépendances
        run: |
          if [ $RUNNER_OS == "Windows" ]; then
            venv\Scripts\pip install -r requirements.txt
          else
            source venv/bin/activate && pip install -r requirements.txt
          fi
          
      - name: Configurer l'authtoken et le sous-domaine ngrok
        run: |
          ngrok config add-authtoken 2NQ1kLappbIbXUFI4mTuakB1vyM_7dZnj3yQDVSU7Hiru2RRw
          echo "region: us" >> ~/.ngrok2/ngrok.yml  # Changez la région si nécessaire

      - name: Démarrer l'application FastAPI avec ngrok
        run: |
          chmod +x scripts/start_app.sh
          ./scripts/start_app.sh
          
      - name: Lancer ngrok avec un sous-domaine statique
        run: |
          nohup ngrok http --region=us --subdomain=kid-aware-loon 8000 > ngrok.log &

      - name: Récupérer l'URL ngrok
        run: |
          sleep 5  # Attend que ngrok démarre
          if [ -f ngrok.log ]; then
            ngrok_url=$(grep -o 'https://[a-z0-9]*\.ngrok-free\.app' ngrok.log | head -1)
            echo "URL publique de ngrok: $ngrok_url"
          else
            echo "Erreur : Le fichier ngrok.log n'a pas été créé."
            exit 1
          fi
